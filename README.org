* ðŸ“‹ Project Requirements

** Responsiveness and Layout:
   --Use Bootstrap containers (container or container-fluid) to structure the layout.
   --Ensure that all components are responsive

** Responsive Navigation Bar:
   *** Build a navbar with links to Home, About, and Contact sections.
   *** Ensure the navbar collapses into a hamburger menu on smaller screens.
   *** Use Bootstrap utilities and components to style the navbar.

** Form Creation and Layout:
   *** First Name -- Last Name
      *** Apply Bootstrap grid layout to position the First Name and Last Name fields side-by-side.
   *** Email -- Password
      *** Use validation classes to ensure the Email and Password fields are required.
   *** checkbox for agreeing to terms
      *** Add a submit button styled with btn-success.

** Table for Displaying Data:
   ***Create a Bootstrap table to display user data.
      ***Hard-code sample data into the table to simulate user submissions.
      ***Apply striped and hoverable rows to enhance readability.
      ***Make the table responsive by wrapping it in a table-responsive div.

** Image and Button Utilities:
   ***Add a responsive image using the img-fluid class and place it inside a fluid container to stretch across the page.
   ***Below the main image, add a circular image (rounded-circle).

** Create two buttons:
   --One button should be visible on all screen sizes.
   --The second button should be hidden on small screens using responsive utilities (d-none and d-md-block).



* ðŸ“¤ Submission Guidelines

** GitHub Repository:
   --Create a GitHub repository for this assignment.
   --Add your HTML file and any supporting CSS or images to the repository.
   --Include a README.md file with a brief description of your project, outlining key features and components used.

** Testing:
   --Verify that the navbar collapses correctly on smaller screens.
   --Ensure all buttons, images, forms, and tables are styled as required.
   --Check that the page renders properly across devices and browsers.

** File Structure:
   --Ensure all files are organized and named appropriately.
   --Place your HTML file at the root of the repository and organize any images or assets in appropriate folders.

** Submission:
   --Submit the GitHub repository link in Google Classroom.

** Bonus Consideration:
   --Use code comments to highlight bonus features, making them easy to identify during grading.
   
